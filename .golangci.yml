service:
  golangci-lint-version: 1.23.3 # Keep this in sync with .circleci/config.yml and Jenkinsfile.pr

run:
  timeout: 5m
  modules-download-mode: vendor
  skip-dirs:
    - store/storetest/mocks

linters-settings:
  gofmt:
    simplify: true
  golint:
    # minimal confidence for issues, default is 0.8
    min-confidence: 0.8
  govet:
    check-shadowing: true
    # settings per analyzer
    settings:
     printf: # analyzer name, run `go tool vet help` to see all analyzers
       funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer
         - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
         - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
         - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
         - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf

    # enable or disable analyzers by name
    enable:
      - atomicalign
    enable-all: false
    disable:
      - shadow
    disable-all: false
    goimports:
      # put imports beginning with prefix after 3rd-party packages;
      # it's a comma-separated list of prefixes
      local-prefixes: github.com/org/project
    gocyclo:
      # minimal code complexity to report, 30 by default (but we recommend 10-20)
      min-complexity: 10
    gocognit:
      # minimal code complexity to report, 30 by default (but we recommend 10-20)
      min-complexity: 10
    maligned:
      # print struct with more effective memory layout or not, false by default
      suggest-new: true
    dupl:
      # tokens count to trigger issue, 150 by default
      threshold: 100
    goconst:
      # minimal length of string constant, 3 by default
      min-len: 3
      # minimal occurrences count to trigger, 3 by default
      min-occurrences: 3
    depguard:
      list-type: blacklist
      include-go-root: false
      packages:
        - github.com/sirupsen/logrus
      packages-with-error-messages:
        # specify an error message to output when a blacklisted package is used
        github.com/sirupsen/logrus: "logging is allowed only by logutils.Log"
    misspell:
      # Correct spellings using locale preferences for US or UK.
      # Default is to use a neutral variety of English.
      # Setting locale to US will correct the British spelling of 'colour' to 'color'.
      locale: US
      ignore-words:
        - someword
    lll:
      # max line length, lines longer will be reported. Default is 120.
      # '\t' is counted as 1 character by default, and can be changed with the tab-width option
      line-length: 120
      # tab width in spaces. Default to 1.
      tab-width: 1
    unused:
      # treat code as a program (not a library) and report unused exported identifiers; default is false.
      # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:
      # if it's called for subdir of a project it can't find funcs usages. All text editor integrations
      # with golangci-lint call it on a directory with the changed file.
      check-exported: false
    unparam:
      # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
      # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
      # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
      # with golangci-lint call it on a directory with the changed file.
      check-exported: false
    nakedret:
      # make an issue if func has more lines of code than this setting and it has naked returns; default is 30
      max-func-lines: 30
    prealloc:
      # XXX: we don't recommend using this linter before doing performance profiling.
      # For most programs usage of prealloc will be a premature optimization.
  
      # Report preallocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.
      # True by default.
      simple: true
      range-loops: true # Report preallocation suggestions on range loops, true by default
      for-loops: false # Report preallocation suggestions on for loops, false by default
    gocritic:
      # Which checks should be enabled; can't be combined with 'disabled-checks';
      # See https://go-critic.github.io/overview#checks-overview
      # To check which checks are enabled run `GL_DEBUG=gocritic golangci-lint run`
      # By default list of stable checks is used.
      enabled-checks:
        - rangeValCopy
  
      # Which checks should be disabled; can't be combined with 'enabled-checks'; default is empty
      disabled-checks:
        - regexpMust
  
      # Enable multiple checks by tags, run `GL_DEBUG=gocritic golangci-lint run` to see all tags and checks.
      # Empty list by default. See https://github.com/go-critic/go-critic#usage -> section "Tags".
      enabled-tags:
        - performance
  
      settings: # settings passed to gocritic
        captLocal: # must be valid enabled check name
          paramsOnly: true
        rangeValCopy:
          sizeThreshold: 32
    godox:
      # report any comments starting with keywords, this is useful for TODO or FIXME comments that
      # might be left in the code accidentally and should be resolved before merging
      keywords: # default keywords are TODO, BUG, and FIXME, these can be overwritten by this setting
        - NOTE
        - OPTIMIZE # marks code that should be optimized before merging
        - HACK # marks hack-arounds that should be removed before merging
    dogsled:
      # checks assignments with too many blank identifiers; default is 2
      max-blank-identifiers: 2
  
    whitespace:
      multi-if: false   # Enforces newlines (or comments) after every multi-line if statement
      multi-func: false # Enforces newlines (or comments) after every multi-line function signature
    wsl:
      # If true append is only allowed to be cuddled if appending value is
      # matching variables, fields or types on line above. Default is true.
      strict-append: true
      # Allow calls and assignments to be cuddled as long as the lines have any
      # matching variables, fields or types. Default is true.
      allow-assign-and-call: true
      # Allow multiline assignments to be cuddled. Default is true.
      allow-multiline-assign: true
      # Allow declarations (var) to be cuddled.
      allow-cuddle-declarations: false
      # Allow trailing comments in ending of blocks
      allow-trailing-comment: false
      # Force newlines in end of case at this limit (0 = never).
      force-case-trailing-whitespace: 0
 

linters:
  enable:
    - megacheck
    - govet
    - ineffassign
    - structcheck
    - unconvert
    - unused
    - varcheck
    # TODO: enable this later
    # - errcheck

issues:
  exclude-rules:
    - linters:
      # ignore unused warnings from enterprise code
      # add more as required.
      - unused
      text: "RedisSupplier|LocalCacheSupplier|Enterprise"

    - linters:
      # ignore golint error for a lot of packages for now
      - golint
      path: "api4|app|cmd|einterface|enterprise|jobs|migrations|mlog|model|testlib|services|store|utils|web|wsapi|plugin/plugintest/api.go|plugin/api.go|plugin/context.go|plugin/client.go|plugin/client_rpc.go|plugin/client_rpc_generated.go|plugin/api_timer_layer_generated.go|plugin/hooks_timer_layer_generated|plugin/environment.go|plugin/health_check.go|plugin/hooks.go|plugin/supervisor.go|plugin/valid.go"
